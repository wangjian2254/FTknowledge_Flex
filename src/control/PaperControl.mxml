<?xml version="1.0" encoding="utf-8"?>
<control:CBorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						  xmlns:s="library://ns.adobe.com/flex/spark" 
						  xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:control="control.*" width="700" height="700" borderVisible="false" backgroundAlpha="0" xmlns:uicontrol="uicontrol.*">
	<fx:Script>
		<![CDATA[
        import events.AutoGridEvent;
        import events.CloseEvent;
        import events.DelItemEvent;

        import httpcontrol.HttpServiceUtil;

        import mx.collections.ArrayCollection;
        import mx.controls.Alert;
        import mx.events.FlexEvent;
        import mx.events.ItemClickEvent;
        import mx.events.ListEvent;
        import mx.rpc.events.ResultEvent;

        import uicontrol.DelItem;

        import util.DataUtil;


        [Bindable]
        private var buttonArr1:ArrayCollection = new ArrayCollection([
            {'label': '刷新', 'ico': refreshimg, 'mode': 'refresh'},
            {'label': '新增', 'ico': wximg, 'mode': 'add'}
        ]);

        private var tempPaper:Object;
        [Bindable]
        private var paperArr:ArrayCollection = new ArrayCollection([]);
        [Bindable]
        private var paperSubjectArr:ArrayCollection = new ArrayCollection([]);
        [Bindable]
        private var allSubjectArr:ArrayCollection = new ArrayCollection([]);

        //新增，保存，删除,回复，转发的处理函数
        //多个按钮点击事件的处理函数
        private function clickHander(e:MouseEvent):void {
            ba1.requireSelection = true;
            var item:Object = ba1.selectedItem;
            if (item.mode == 'refresh') {
                loadPaper();
            }
            if (item.mode == 'add') {
                resetFormData();
                delBtn.enabled = false;
            }

        }

        private var isPaging:Boolean = true;

        private function loadPaper():void {
            var o:Object = {};//如果需要补齐查询参数
            HttpServiceUtil.getCHTTPServiceAndResult("/tax/getAllPaper", loadPaperDataResult, "POST").send(o);
        }

        private function loadPaperDataResult(result:Object, e:ResultEvent):void {
            if (result.success) {
                var arr:Array;
                if (isPaging) {
                    pagebar1.mPageSize = result.result.limit;
                    pagebar1.RecordCount = result.result.total;
                    pagebar1.initPage();

                }
                arr = result.result.result;
                paperArr = new ArrayCollection(arr);
                paperArr.filterFunction = filterSubjectTitle;
            }
        }

        private function loadSubject():void {
            var o:Object = {};//如果需要补齐查询参数
            o["kind"] = "";
            var url:String = o["kind"] || o["kind"] == "" ? "/tax/getSubjectAll" : "/tax/getSubjectByKind";
            HttpServiceUtil.getCHTTPServiceAndResult(url, loadSubDataResult, "POST").send(o);
        }

        private function loadSubDataResult(result:Object, e:ResultEvent):void {
            if (result.success) {
                delBtn.enabled = false;
                var arr:Array;

                arr = result.result.result is Array ? result.result.result : [];

                allSubjectArr = new ArrayCollection(arr);
                allSubjectArr.filterFunction = filterSubjectTitle;
            }
        }

        private function filterSubjectTitle(item:Object):Boolean {

            if (searchInput.text || item.title.indexOf(searchInput.text))
                return true;
            else
                return false;

        }

        private function filterSubject():void {
            allSubjectArr.refresh();
        }

        private function savePaper():void {
            if (!isValid()) {
                return;
            }
            var o:Object = getFormData();
            tempPaper = o;
            HttpServiceUtil.getCHTTPServiceAndResult("/tax/updatePaper", savePaperDataResult, "POST").send(o);
        }

        private function savePaperDataResult(result:Object, e:ResultEvent):void {
            if (result.success) {
                loadPaper();
                tempPaper['id'] = result.result;
            }
        }

        private function delPaper():void {

            Alert.show("是否删除?", "提示", Alert.YES | Alert.NO, null, function (e:mx.events.CloseEvent):void {
                if (e.detail == Alert.YES) {
                    var o:Object = getFormData();
                    HttpServiceUtil.getCHTTPServiceAndResult("/tax/delPaper", delPaperDataResult, "POST").send(o);
                }
            });
        }

        private function delPaperDataResult(result:Object, e:ResultEvent):void {
            if (result.success) {
                loadPaper();
                resetFormData();
            }
        }

        private function resetFormData():void {
            title.text = "";
            content.text = "";
            ztdm.text = "";
            paperSubjectArr.removeAll();
            tempPaper=null;


        }

        private function getFormData():Object {
            var o:Object = {};
            var n:Object = paperGrid.selectedItem;
            if (tempPaper != null && tempPaper.hasOwnProperty('id')) {
                o['id'] = tempPaper['id'];
            } else {
                o['id'] = ''
            }
            o["title"] = title.text;
            o["content"] = content.text;
            o["is_pub"] = is_pub.selected;
            o["right_ztdm"] = ztdm.text;
            return o;
        }

        private function setFormData(o:Object):void {
            title.text = o["title"];
            content.text = o["content"];
            is_pub.selected = o["is_pub"];
            ztdm.text = o["right_ztdm"];


        }

        private function isValid():Boolean {
            var o:Object = getFormData();
            if (o["title"] == "") {
                Alert.show("题目不能为空", "提示");
                return false;
            }


            if (o["content"] == "") {
                Alert.show("备注不能为空", "提示");
                return false;
            }
            return true;
        }

        private function seletPaper():void {
            ba1.requireSelection = false;
            ba1.selectedIndex = -1;
            var o:Object = paperGrid.selectedItem;
            tempPaper = o;
            setFormData(o);
            delBtn.enabled = true;
            var data:Object = new Object();
            data['pid'] = o['id'];
            HttpServiceUtil.getCHTTPServiceAndResult("/tax/getSubjectByPaper", getSubjectByPaperResult, "POST").send(data);

        }

        private function getSubjectByPaperResult(result:Object, e:ResultEvent):void {
            if (result.success) {
                paperSubjectArr = new ArrayCollection(result.result as Array);
            }
        }

        private function seletSubjec(f:Boolean):void {
            if(!tempPaper.hasOwnProperty('id')){
                Alert.show("请先保存试卷。");
                return;
            }
            if(f){
                Alert.show("是否删除:"+paperSubjectGrid.selectedItem.title,"提示",Alert.YES|Alert.NO,null,function(e:mx.events.CloseEvent):void{
                    if(e.detail==Alert.YES){
                        var o:Object={};
                        o['pid']=tempPaper.id;
                        o["sid"]=paperSubjectGrid.selectedItem["id"];
                        o['do']='del';

                        HttpServiceUtil.getCHTTPServiceAndResult("/tax/doPaperSubject", doPaperSubjectDelResult, "POST").send(o);
                    }
                });
            }else{
                var o:Object=new Object();
                o['pid']=tempPaper.id;
                o["sid"]=allSubjectGrid.selectedItem["id"];
                o['do']='add';

                HttpServiceUtil.getCHTTPServiceAndResult("/tax/doPaperSubject", doPaperSubjectAddResult, "POST").send(o);
            }
        }

        private function doPaperSubjectDelResult(result:Object,e:ResultEvent):void{
            if(result.success){
                if(paperSubjectGrid.selectedItem.id==result.result){
                    paperSubjectArr.removeItemAt(paperSubjectArr.getItemIndex(paperSubjectGrid.selectedItem));
                }else{
                    seletPaper();
                }
            }
        }

        private function doPaperSubjectAddResult(result:Object,e:ResultEvent):void{
            if(result.success){
                if(allSubjectGrid.selectedItem.id==result.result){
                    paperSubjectArr.addItem(allSubjectGrid.selectedItem);
                }else{

                    seletPaper();
                }
            }
        }

        override public function init(e:FlexEvent):void {
            loadSubject();
            loadPaper();

        }

        override public function closeContainer(e:CloseEvent):void {
            dispatchEvent(e);
        }

        private function typeShow(item:Object, column:DataGridColumn):String {
            if (item.type == 1) {
                return "选择题";
            } else {
                return "凭证题";
            }
        }

        private function pubShow(item:Object, column:DataGridColumn):String {
            if (item.type) {
                return "发布";
            } else {
                return "未发布";
            }
        }
        ]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:BorderContainer top="5" bottom="5" left="5" right="5"  borderVisible="false" color="0x333333" skinClass="skins.contentBoxSkin">
		<s:layout>
			<s:VerticalLayout>
				
			</s:VerticalLayout>
		</s:layout>
		<s:BorderContainer left="0" top="0" height="45" width="100%" borderVisible="false" backgroundImage="{CBorderContainer.toolbgimg}">
			<s:layout>
				<s:HorizontalLayout gap="20" verticalAlign="middle" paddingLeft="20">
					
				</s:HorizontalLayout>
			</s:layout>
			<s:HGroup height="20">

			</s:HGroup>
			<s:ButtonBar id="ba1" dataProvider="{buttonArr1}" selectedIndex="0" doubleClickEnabled="true"  chromeColor="#faf0cc"  labelField="label" iconField="ico"  height="30"  requireSelection="true" click="clickHander(event)">
			</s:ButtonBar>
		</s:BorderContainer>
		<s:BorderContainer height="100%" width="100%" borderVisible="false">
			<s:layout>
				<s:HorizontalLayout gap="2">
					
				</s:HorizontalLayout>
			</s:layout>
			<s:VGroup height="100%" width="430" >
				<mx:DataGrid id="paperGrid" height="100%" width="100%" dataProvider="{paperArr}" itemClick="seletPaper();">
					<mx:columns>
						<mx:DataGridColumn headerText="试卷" dataField="title">
							
						</mx:DataGridColumn>
						<mx:DataGridColumn headerText="是否发布" dataField="is_pub" labelFunction="pubShow">
							
						</mx:DataGridColumn>
					</mx:columns>
				</mx:DataGrid>
                <uicontrol:Pageing id="pagebar1" infolbl="false">
                </uicontrol:Pageing>
			</s:VGroup>
			<s:Scroller width="100%" height="100%">
                <s:Group width="100%" height="100%">
                    <s:Form width="100%" id="formSubject">
                        <s:FormItem label="标题:"  width="80%"  id="content1">
                            <s:TextInput id="title"  width="100%" prompt="标题" >
                            </s:TextInput>
                        </s:FormItem>
                        <s:FormItem label="试卷介绍:" width="80%" height="150">
                            <s:TextArea id="content" height="150" width="100%" prompt="试卷介绍">
                            </s:TextArea>
                        </s:FormItem>
                        <s:FormItem label="是否发布:" width="80%" >
                            <s:CheckBox id="is_pub" label="是否发布" selected="true"></s:CheckBox>
                        </s:FormItem>
                        <mx:ControlBar>
                            <s:Button id="savBtn" label="保存" color="white" chromeColor="red" height="25" click="savePaper();">
                            </s:Button>
                            <s:Button id="delBtn" label="删除" height="25"  enabled="false" click="delPaper();">
                            </s:Button>
                            <s:Button id="ztdmButton" label="设置标准答案" height="25"  enabled="false" click="delPaper();">
                            </s:Button>
                            <s:TextInput visible="false" id="ztdm" ></s:TextInput>
                        </mx:ControlBar>
                        <s:FormItem width="80%" id="content3"  label="试题:">
                            <s:layout>
                                <s:HorizontalLayout gap="10" horizontalAlign="left"></s:HorizontalLayout>
                            </s:layout>
                            <mx:DataGrid id="paperSubjectGrid" height="700" width="100%" doubleClickEnabled="true" dataProvider="{paperSubjectArr}" itemDoubleClick="seletSubjec(true);">
                                <mx:columns>
                                    <mx:DataGridColumn headerText="题目" dataField="title" textAlign="left">

                                    </mx:DataGridColumn>
                                    <mx:DataGridColumn headerText="类型" dataField="type" width="60" textAlign="left" labelFunction="typeShow">

                                    </mx:DataGridColumn>

                                </mx:columns>
                            </mx:DataGrid>
                            <s:VGroup  height="700" width="100%">
                                <s:TextInput id="searchInput"   width="100%" prompt="过滤" change="filterSubject()" >
                                </s:TextInput>
                                <mx:DataGrid id="allSubjectGrid" height="100%" width="100%" doubleClickEnabled="true" dataProvider="{allSubjectArr}" itemDoubleClick="seletSubjec(false);">
                                    <mx:columns>
                                        <mx:DataGridColumn headerText="题目" dataField="title"  textAlign="left">

                                        </mx:DataGridColumn>
                                        <mx:DataGridColumn headerText="类型" dataField="type"  width="60"  textAlign="left" labelFunction="typeShow">

                                        </mx:DataGridColumn>

                                    </mx:columns>
                                </mx:DataGrid>
                            </s:VGroup>
                        </s:FormItem>





                    </s:Form>
                </s:Group>
			</s:Scroller>


		</s:BorderContainer>
	</s:BorderContainer>
</control:CBorderContainer>
