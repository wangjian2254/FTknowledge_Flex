<?xml version="1.0" encoding="utf-8"?>
<control:CBorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						  xmlns:s="library://ns.adobe.com/flex/spark" 
						  xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:control="control.*" 
						  xmlns:uicontrol="uicontrol.*"
						  width="700" height="500" borderVisible="false" backgroundAlpha="0">
	<fx:Script>
		<![CDATA[
			import events.CloseEvent;
			import events.PageChangeEvent;
			
			import httpcontrol.CHTTPService;
			import httpcontrol.HttpServiceUtil;
			
			import model.DeptModel;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.ItemClickEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import util.ToolUtil;
			
			[Bindable]
			private var list:ArrayCollection=new ArrayCollection();
			
			override public   function  init(e:FlexEvent):void{
				refreshTaxKind();
			}
			override public function closeContainer(e:CloseEvent):void{
				dispatchEvent(e);
				
			}
			
			private function changeHy():void{
				refreshTaxKind();
				addRoot();
				addTicket();
			}
			
			private function refreshTaxKind():void{
				var o:Object=new Object();
				o['groupid']=hy.selectedItem.id;
				HttpServiceUtil.getCHTTPServiceAndResult("/ft/getTaxKind",refresh,"POST").send(o);
			}
			public function save(e:Event):void{
				var http:CHTTPService=HttpServiceUtil.getCHTTPServiceAndResult("_100_BaseInfosAction_saveOrUpdateAreaPoint.action",saveDataResult,"POST");
				var o:Object=getData();
				if(o==null){
					return;
				}
				http.send(o);
			}
			public function getData():Object{
				var o:Object={};
//				o["areapointVo.areaname"]=areaname.text;
//				if(o["areapointVo.areaname"]==""){
//					Alert.show("请输入点位名称","警告");
//					return null;
//				}
//				o["areapointVo.id"]=idField.text;
				return o;
			}
			
			private function saveDataResult(result:Object,e:ResultEvent):void{
				if(result.success){
//					idField.text=result.message.result.id;
//					
//					ToolUtil.areaRefresh(refresh);
				}
			}

			private function loadDataFault(e:FaultEvent):void{
				Alert.show('操作失败',"提示");
			}
			

			
			//新增，保存，删除的处理函数
			private function clickHander(e:ItemClickEvent):void{
				ticketSave.enabled=false;
				ticketDel.enabled=false;
				kindSave.enabled=false;
				if(e.label=="新增财税分类根级"){
					addRoot();
					kindSave.enabled=true;
					
				}
				if(e.label=="新增财税分类下级"){
					if(kindTree.selectedItem&&kindTree.selectedItem.type=='kind'){
						addRoot();
						kindFatherId.text = kindTree.selectedItem.id;
						fatherKind.text = kindTree.selectedItem.name;
						kindSave.enabled=true;
						
					}else{
						if(kindTree.selectedItem){
							Alert.show("财税票据无法添加下级","提示");
						}else{
							
							Alert.show("请选择一个财税分类","提示");
						}
					}

				}
				if(e.label=="新增票据"){
					if(kindTree.selectedItem&&kindTree.selectedItem.type=='kind'){
						if(kindTree.selectedItem.hasOwnProperty("children")&&kindTree.selectedItem.children.getItemAt(0).type=="kind"){
							Alert.show("请选择一个合适的财税分类节点","提示");
						}else{
							addTicket();
							ticketSave.enabled=true;
							ticketKindId.text = kindTree.selectedItem.id;
							taxKind.text = kindTree.selectedItem.name;
						}
						
						
					}else{
						Alert.show("请选择一个合适的财税分类节点","提示");
					}

				}
				if(e.label=="新增同级"){
					if(kindTree.selectedItem){
						if(kindTree.selectedItem.type =="kind"){
							addRoot();
							kindFatherId.text = kindTree.getParentItem(kindTree.selectedItem).id;
							fatherKind.text = kindTree.getParentItem(kindTree.selectedItem).name;
							kindSave.enabled=true;
						}
						if(kindTree.selectedItem.type =="ticket"){
							addTicket();
							ticketSave.enabled=true;
							ticketKindId.text = kindTree.getParentItem(kindTree.selectedItem).id;
							taxKind.text = kindTree.getParentItem(kindTree.selectedItem).name;
						}
						
						
					}else{
						Alert.show("请选择一个财税分类或票据","提示");
						
					}

				}
				
				if(e.label=='同步数据'){
					refreshTaxKind();
				}

				
			}
			
			private function showNode():void{
				ticketSave.enabled=false;
				ticketDel.enabled=false;
				kindSave.enabled=false;
				if(kindTree.selectedItem.type =="kind"){
					addRoot();
					kindId.text = kindTree.selectedItem.id;
					kindname.text= kindTree.selectedItem.name;
					kindFatherId.text = kindTree.getParentItem(kindTree.selectedItem).id;
					fatherKind.text = kindTree.getParentItem(kindTree.selectedItem).name;
					if(!kindTree.selectedItem.is_active){
						sfqy.selected = false;
					}
					kindSave.enabled=true;
				}
				if(kindTree.selectedItem.type =="ticket"){
					addTicket();
					ticketSave.enabled=true;
					ticketDel.enabled=true;
					ticketName.text = kindTree.selectedItem.name;
					ticketId.text = kindTree.selectedItem.id;
					ticketKindId.text = kindTree.getParentItem(kindTree.selectedItem).id;
					taxKind.text = kindTree.getParentItem(kindTree.selectedItem).name;
				}
			}
			
			private function addRoot():void{
				kindFatherId.text = "";
				kindId.text = "";
				kindname.text = "";
				fatherKind.text = "无";
				sfqy.selected = true;
				
			}
			private function addTicket():void{
				ticketName.text = "";
				taxKind.text = "";
				ticketId.text = "";
				ticketKindId.text = "";
				
				
			}
			
			private function saveTicket():void{
				var data:Object = new Object();
				data["id"]=ticketId.text;
				data["name"]=ticketName.text;
				data["taxkindid"]=ticketKindId.text;
				data["groupid"]=hy.selectedItem.id;
				if(ticketName.text==""){
					Alert.show("票据名称不能为空。","提示");
					return ;
				}
				if(ticketKindId.text==""){
					Alert.show("必须选择一个财税分类。","提示");
					return ;
				}
				HttpServiceUtil.getCHTTPServiceAndResult("/ft/saveTaxTicket",saveTicketResult,"POST").send(data);
			}
			
			private function saveKind():void{
				var data:Object = new Object();
				data["id"]=kindId.text;
				data["name"]=kindname.text;
				data["kindFatherId"]=kindFatherId.text;
				data["is_active"]=sfqy.selected;
				if(kindname.text==""){
					Alert.show("分类名称不能为空。","提示");
					return ;
				}
				HttpServiceUtil.getCHTTPServiceAndResult("/ft/saveTaxKind",saveKindResult,"POST").send(data);
				
				
			}
			
			private function saveKindResult(result:Object,e:ResultEvent):void{
				if(result.success){
					kindId.text = result.result;
					refreshTaxKind();
				}
			}
			private function saveTicketResult(result:Object,e:ResultEvent):void{
				if(result.success){
					ticketId.text = result.result;
					refreshTaxKind();
				}
			}
			
			public function del():void{
				var userArr:ArrayCollection=new ArrayCollection();
				var obj:Object;
				var item:Object;
				for(var i:int=list.length-1;i>=0;i--){
					item=list.getItemAt(i);
					if(!item.selected){
						continue;
					}
					obj=new Object();
					if(item.hasOwnProperty("id")){
						obj.id=item.id;
						userArr.addItem(obj);
					}
					//					obj.name=item.name;
					
				}
				if(userArr.length>0){
					ToolUtil.areaRefresh(refresh);
//					HttpServiceUtil.getCHTTPServiceAndResultAndFault("/htcsgl/_100_BaseInfosAction_deletedept.action",loadDataResult,loadDataFault,"POST").send(userArr);
				}
			}
			
			public function show(obj:Object):void{
				
				
				
			}
			
			
			
			public function refresh(result:Object,e:ResultEvent):void{
				if(result.success){
					list = new ArrayCollection( result.result as Array);
					
				}
				kindTree.validateNow();
				for each(var item:Object in list){
					kindTree.expandChildrenOf(item,true);
					
				}
			}
			
			private function delTicket():void{
				var data:Object = new Object();
				data["id"] = ticketId.text;
				HttpServiceUtil.getCHTTPServiceAndResult("/ft/delTaxTicket",delTicketResult,"POST").send(data);
				
			}
			
			private function delTicketResult(result:Object,e:ResultEvent):void{
				if(result.success){
					addTicket();
					refreshTaxKind();
				}
			}
			
			
			private function kindlblFun(item:Object):String{
				var s:String ="";
				if(item.type=="kind"){
					s+="[分类]";
				}
				if(item.type=="ticket"){
					s+="[票据]";
				}
				s+=item.name;
				if(item.type=="kind"&&!item.is_active){
					s+="(不可用)";
				}
				return s;
			}
			
			
			[Bindable]
			private var buttonArr:ArrayCollection=new ArrayCollection([{'label':'新增财税分类下级','ico':addimg},{'label':'新增财税分类根级','ico':addimg},{'label':'新增同级','ico':addimg},{'label':'新增票据','ico':addimg},{'label':'同步数据','ico':refreshimg}]);
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:BorderContainer top="5" bottom="5" left="5" right="5"  borderVisible="false">
		<s:layout>
			<s:HorizontalLayout>
				
			</s:HorizontalLayout>
		</s:layout>
		<s:BorderContainer width="40%" height="100%" id="panel" backgroundAlpha="0"   borderVisible="false">
				<s:layout>
					<s:VerticalLayout verticalAlign="top">
						
					</s:VerticalLayout>
				</s:layout>
			<s:BorderContainer  width="100%" height="25"  backgroundAlpha="0"  borderVisible="false">	
				<s:layout>
					<s:HorizontalLayout verticalAlign="middle" horizontalAlign="left" paddingLeft="25">
						
					</s:HorizontalLayout>
				</s:layout>
				<s:Label text="行业："    fontSize="14" height="25" verticalAlign="middle" textAlign="left" >
				
				</s:Label>
				<mx:ComboBox id="hy" dataProvider="{ToolUtil.hyList}" labelField="name" width="100" change="changeHy()">
					
				</mx:ComboBox>
			</s:BorderContainer>
				<mx:Tree id="kindTree" itemClick="showNode()"   width="100%" height="100%" dataProvider="{list}" labelField="name" labelFunction="kindlblFun" >
					
				</mx:Tree>
		</s:BorderContainer>
		<s:BorderContainer id="rightContainner" width="60%" height="100%" backgroundAlpha="0"  borderVisible="false">
			<s:layout>
				<s:VerticalLayout gap="5">
					
				</s:VerticalLayout>
				
			</s:layout>
			<s:BorderContainer left="0" top="0" height="45" width="100%" borderVisible="false" backgroundImage="{CBorderContainer.toolbgimg}">
				<s:layout>
					<s:BasicLayout>
						
					</s:BasicLayout>
				</s:layout>
				<mx:ButtonBar dataProvider="{buttonArr}"  doubleClickEnabled="true"  chromeColor="#faf0cc"  labelField="label" iconField="ico"  height="30" top="7" bottom="7" left="10" itemClick="clickHander(event);">
					
				</mx:ButtonBar>
				
			</s:BorderContainer>
			
			<s:Form width="100%" id="form1"   >
				<s:FormHeading label="财税分类" fontWeight="bold">
					
				</s:FormHeading>
				<s:FormItem label="分类名称:" textAlign="right">
					<s:TextInput id="kindname" width="200"  text="" enabled="{kindSave.enabled}">
						
					</s:TextInput>
				</s:FormItem>
				<s:FormItem label="父类:" textAlign="right">
					<s:Label id="fatherKind">
						
					</s:Label>
				</s:FormItem>
				<s:FormItem label="启用:" textAlign="right">
					<s:CheckBox id="sfqy" label="可用"/>
				</s:FormItem>
				<s:FormItem>
					<s:Button label="提交" click="saveKind()" id="kindSave" chromeColor="#faf0cc" height="30" >
						
					</s:Button>
				</s:FormItem>
				<s:TextInput id="kindId" visible="false">
					
				</s:TextInput>
				<s:TextInput id="kindFatherId" visible="false">
					
				</s:TextInput>
			</s:Form>
			<s:Form width="100%" id="form2"   >
				<s:FormHeading label="票据" fontWeight="bold">
					
				</s:FormHeading>
				<s:FormItem label="票据名称:" textAlign="right">
					<s:TextInput id="ticketName" width="200"  text="" enabled="{ticketSave.enabled}">
						
					</s:TextInput>
				</s:FormItem>
				<s:FormItem label="所属分类:" textAlign="right">
					<s:Label id="taxKind">
						
					</s:Label>
				</s:FormItem>
				<s:FormItem label="所属行业:" textAlign="right">
					<s:Label text="{hy.selectedItem.name}">
						
					</s:Label>
				</s:FormItem>
				
				<s:FormItem>
					<s:BorderContainer borderVisible="false" width="100%">
						<s:layout>
							<s:HorizontalLayout gap="10">
								
							</s:HorizontalLayout>
						</s:layout>
						<s:Button label="提交" chromeColor="#faf0cc" height="30" click="saveTicket()" id="ticketSave">
						</s:Button>
						<s:Button label="删除" chromeColor="#faf0cc" height="30" click="delTicket()" id="ticketDel">
						</s:Button>
					</s:BorderContainer>
				</s:FormItem>
				<s:TextInput id="ticketId" visible="false">
					
				</s:TextInput>
				<s:TextInput id="ticketKindId" visible="false">
					
				</s:TextInput>
			</s:Form>
		</s:BorderContainer>
	</s:BorderContainer>
</control:CBorderContainer>
